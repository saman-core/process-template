#set ($nameTemplate = ${this.mangleTypeIdentifier($template.getName())})
#set ($nameProduct = ${this.mangleTypeIdentifier($template.getProductName())})
#set ($nameTemplateLowerCase = ${this.toLowerCase($nameTemplate)})
#set ($nameProductLowerCase = ${this.toLowerCase($nameProduct)})
package ${this.mangle($template.getPackageName())}.${nameProductLowerCase}.${nameTemplateLowerCase}.client.rest.microprofile;

import io.smallrye.mutiny.Uni;
import ${this.mangle($template.getPackageName())}.${nameProductLowerCase}.${nameTemplateLowerCase}.model.${nameTemplate}Model;
import org.eclipse.microprofile.rest.client.annotation.RegisterClientHeaders;
import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;
import jakarta.enterprise.context.ApplicationScoped;
import jakarta.ws.rs.*;
import jakarta.ws.rs.core.MediaType;

@ApplicationScoped
@RegisterRestClient(configKey = "${nameTemplateLowerCase}-api")
@RegisterClientHeaders
@Path("/${nameTemplateLowerCase}s")
@Produces(MediaType.APPLICATION_JSON)
@Consumes(MediaType.APPLICATION_JSON)
public interface ${nameTemplate}RestClient {

    @GET
    @Path("/getById/{id}")
    Uni<${nameTemplate}Model> getById(@PathParam("id") Long id);

    @POST
    @Path("/create")
    Uni<${nameTemplate}Model> create(${nameTemplate}Model model);

    @PUT
    @Path("/update")
    Uni<${nameTemplate}Model> update(${nameTemplate}Model model);

    @DELETE
    @Path("/deleteById/{id}")
    Uni<Boolean> deleteById(@PathParam("id") Long id);
}