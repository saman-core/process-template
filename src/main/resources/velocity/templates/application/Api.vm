package ${template.getPackageNameFormatted()}.${template.getProductNameFormattedLowerCase()}.${template.getNameFormattedLowerCase()}.api;

import ${template.getPackageNameFormatted()}.${template.getProductNameFormattedLowerCase()}.${template.getNameFormattedLowerCase()}.model.${template.getNameFormatted()}Model;
import ${template.getPackageNameFormatted()}.${template.getProductNameFormattedLowerCase()}.${template.getNameFormattedLowerCase()}.service.${template.getNameFormatted()}Service;
import io.smallrye.mutiny.Uni;
import org.jboss.logging.Logger;

import jakarta.annotation.security.RolesAllowed;
import jakarta.inject.Inject;
import jakarta.validation.Valid;
import jakarta.ws.rs.*;
import jakarta.ws.rs.core.Context;
import jakarta.ws.rs.core.MediaType;
import jakarta.ws.rs.core.UriInfo;

@Path("/${template.getNameFormattedLowerCase()}s")
@Consumes(MediaType.APPLICATION_JSON)
@Produces(MediaType.APPLICATION_JSON)
public class ${template.getNameFormatted()}Api {

    @Inject
    Logger log;

    @Context
    UriInfo uriInfo;

    @Inject
    ${template.getNameFormatted()}Service service;

    @GET
    @Path("/getById/{id}")
    @RolesAllowed({"ms_client"})
    public Uni<${template.getNameFormatted()}Model> getById(@PathParam("id") long id) {
        log.debugf("${template.getNameFormatted()}Api.getById %d ", id);
        return service.getById(id);
    }

    @DELETE
    @Path("/deleteById/{id}")
    @RolesAllowed({"ms_client"})
    public Uni<Boolean> deleteById(@PathParam("id") Long id) {
        log.debugf("${template.getNameFormatted()}Api.deleteById %d ", id);
        return service.deleteById(id);
    }

   @POST
   @Path("/create")
   @RolesAllowed({"ms_client"})
   public Uni<${template.getNameFormatted()}Model> create(@Valid ${template.getNameFormatted()}Model ${template.getNameFormattedLowerCase()}Model) {
        log.debug("${template.getNameFormatted()}Api.create");
        return service.create(${template.getNameFormattedLowerCase()}Model);
   }

   @PUT
   @Path("/update")
   @RolesAllowed({"ms_client"})
   public Uni<${template.getNameFormatted()}Model> update(@Valid ${template.getNameFormatted()}Model ${template.getNameFormattedLowerCase()}Model) {
        log.debug("${template.getNameFormatted()}Api.update");
        return service.update(${template.getNameFormattedLowerCase()}Model);
   }
}