package ${template.getPackageNameFormatted()}.${template.getProductNameFormattedLowerCase()}.${template.getNameFormattedLowerCase()}.entity;

import lombok.Getter;
import lombok.Setter;
import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import jakarta.persistence.*;
import java.io.Serial;
import java.io.Serializable;

@Entity
@Getter
@Setter
@Table(name = "${template.getProductNameFormattedLowerCase()}_${template.getNameFormattedLowerCase()}"
#if($template.evaluateIfAnyFieldIsIndex())
    , indexes = {
         ${template.getAllIndexFromField()}
    }
#end
)
public class ${template.getNameFormatted()}Entity implements Serializable {

    @Serial
    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "sq_${template.getProductNameFormattedLowerCase()}_${template.getNameFormattedLowerCase()}")
    @Column(name = "id", unique = true, nullable = false)
    private Long id;

#foreach ($field in $template.getAllFieldToPersist())
#set ($annotations = ${field.getAllAnnotationToEntity()})
#foreach($annotation in $annotations)
    $annotation
#end
    private ${field.getObjectTypeToEntity()} ${field.getKeyMangle()};
#end

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        ${template.getNameFormatted()}Entity that = (${template.getNameFormatted()}Entity) o;
        return new EqualsBuilder().append(id, that.id)
#foreach ($field in $template.getAllFieldToPersist())
                .append(${field.getKeyMangle()}, that.${field.getKeyMangle()})
#end
                .isEquals();
    }

    @Override
    public int hashCode() {
        return new HashCodeBuilder(17, 37)
                .append(id)
#foreach ($field in $template.getAllFieldToPersist())
#if(${field.getIsPersistent()})
                .append(${field.getKeyMangle()})
#end
#end
                .toHashCode();
    }
}